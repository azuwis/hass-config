##### Button #####

- alias: Button 1 single
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/button_1
  condition:
    condition: template
    value_template: >-
      {{ trigger.payload_json.click == 'single' }}
  action:
    service: switch.toggle
    data:
      entity_id: switch.light_living_room

- alias: Button 1 long
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/button_1
  condition:
    condition: template
    value_template: >-
      {{ trigger.payload_json.click == 'long' }}
  action:
    service: switch.toggle
    data:
      entity_id: switch.reading_living_room

- alias: Button 2 activate doorbell
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/button_2
  condition:
    - condition: template
      value_template: >-
        {{ trigger.payload_json.click in ['single', 'double', 'triple', 'quadruple', 'many', 'long'] }}
    - condition: time
      after: '08:00'
      before: '21:00'
  action:
    service: paplay.play
    data:
      filename: audio/dingdong.ogg
      volume: 45000

- alias: Button 3 single
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/button_3
  condition:
    condition: template
    value_template: >-
      {{ trigger.payload_json.click == 'single' }}
  action:
    service: light.toggle
    data:
      entity_id: light.bedroom

- alias: Button 3 long
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/button_3
  condition:
    condition: template
    value_template: >-
      {{ trigger.payload_json.click == 'long' }}
  action:
    service: switch.toggle
    data:
      entity_id: switch.light_living_room

- alias: Cube flip90
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/cube
  condition:
    condition: template
    value_template: >-
      {{ trigger.payload_json.action == 'flip90' }}
  action:
    service: switch.toggle
    data:
      entity_id: switch.reading_living_room

# - alias: Cube rotate left
#   trigger:
#     platform: mqtt
#     topic: zigbee2mqtt/cube
#   condition:
#     condition: template
#     value_template: >-
#       {{ trigger.payload_json.action == 'rotate_left' }}
#   action:
#     service: light.turn_on
#     entity_id: light.living_room
#     data_template:
#       brightness: >-
#         {{ states.light.living_room.attributes.brightness - 50 }}

# - alias: Cube rotate right
#   trigger:
#     platform: mqtt
#     topic: zigbee2mqtt/cube
#   condition:
#     condition: template
#     value_template: >-
#       {{ trigger.payload_json.action == 'rotate_right' }}
#   action:
#     service: light.turn_on
#     entity_id: light.living_room
#     data_template:
#       brightness: >-
#         {{ states.light.living_room.attributes.brightness + 50 }}

##### Climate #####

# - alias: Climate bedroom off when cold
#   trigger:
#     platform: numeric_state
#     entity_id: sensor.ht_bedroom_temperature
#     below: 25
#   condition:
#     condition: numeric_state
#     entity_id: sensor.dark_sky_apparent_temperature
#     below: 25
#   action:
#     service: climate.set_operation_mode
#     data:
#       entity_id: climate.bedroom
#       operation_mode: 'off'

# - alias: Climate bedroom off when door open
#   trigger:
#     platform: state
#     entity_id: binary_sensor.door_bedroom
#     from: 'off'
#     to: 'on'
#     for: '00:02:00'
#   action:
#     - service: climate.set_operation_mode
#       data:
#         entity_id: climate.bedroom
#         operation_mode: 'off'
#     - delay: '00:00:10'
#     - service: climate.set_operation_mode
#       data:
#         entity_id: climate.bedroom
#         operation_mode: 'off'
#     - delay: '00:00:10'
#     - service: climate.set_operation_mode
#       data:
#         entity_id: climate.bedroom
#         operation_mode: 'off'

# - alias: Climate bedroom cool when door close
#   trigger:
#     platform: state
#     entity_id: binary_sensor.door_bedroom
#     from: 'on'
#     to: 'off'
#     for: '00:00:10'
#   condition:
#     - condition: numeric_state
#       entity_id: sensor.ht_bedroom_temperature
#       above: 26.8
#     - condition: numeric_state
#       entity_id: sensor.dark_sky_apparent_temperature
#       above: 26.8
#   action:
#     service: climate.set_operation_mode
#     data:
#       entity_id: climate.bedroom
#       operation_mode: cool

##### HomeAssistant #####

- alias: Automatic theme change
  trigger:
    - platform: homeassistant
      event: start
    - platform: time
      at: '8:00:00'
    - platform: state
      entity_id: sun.sun
      to: below_horizon
  action:
    service: frontend.set_theme
    data_template:
      name: >-
        {% if is_state('sun.sun', 'above_horizon') %}
          custom
        {% else %}
          midnight
        {% endif %}

##### Light #####

- alias: Light living room set brightness when available
  trigger:
    - platform: state
      entity_id: light.living_room
      from: 'unavailable'
      to: 'on'
    - platform: time
      at: '7:00:00'
  condition:
    condition: state
    entity_id: light.living_room
    state: 'on'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.light_living_room

- alias: Light living room off when occupancy off
  trigger:
    platform: state
    entity_id: binary_sensor.occupancy_living_room
    from: 'on'
    to: 'off'
    for: '00:03:00'
  condition:
    condition: time
    after: '23:00'
    before: '16:00'
  action:
    service: switch.turn_off
    data:
      entity_id: switch.light_living_room

- alias: Light living room on when occupancy on
  trigger:
    platform: state
    entity_id: binary_sensor.occupancy_living_room
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.living_room
    state: 'off'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.light_living_room

- alias: Moonlight living room automation off
  trigger:
    - platform: state
      entity_id: binary_sensor.door_bedroom
      from: 'off'
      to: 'on'
      for: '00:01:00'
    - platform: time
      at: '08:15:00'
  condition:
    condition: time
    after: '07:00:00'
    before: '08:30:00'
  action:
    - service: automation.turn_off
      data:
        entity_id: automation.moonlight_living_room_on_when_door_on
    - service: automation.turn_off
      data:
        entity_id: automation.moonlight_living_room_off_when_door_off

- alias: Moonlight living room automation on
  trigger:
    platform: time
    at: '22:00:00'
  action:
    - service: automation.turn_on
      data:
        entity_id: automation.moonlight_living_room_on_when_door_on
    - service: automation.turn_on
      data:
        entity_id: automation.moonlight_living_room_off_when_door_off

- alias: Moonlight living room off when door off
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    from: 'on'
    to: 'off'
    for: '00:00:01'
  condition:
    condition: state
    entity_id: light.living_room
    state: 'on'
  action:
    service: switch.turn_off
    data:
      entity_id: switch.moonlight_living_room

- alias: Moonlight living room on when door on
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    from: 'off'
    to: 'on'
  condition:
    - condition: state
      entity_id: light.living_room
      state: 'on'
    - condition: state
      entity_id: light.bedroom
      state: 'off'
  action:
    - service: switch.turn_on
      data:
        entity_id: switch.moonlight_living_room
    - delay: '00:00:10'
    - service: switch.turn_off
      data:
        entity_id: switch.moonlight_living_room

# - alias: Nightlight bedroom auto off
#   trigger:
#     platform: state
#     entity_id: binary_sensor.motion_living_room
#     to: 'off'
#     for: '00:30:00'
#   action:
#     service: switch.turn_off
#     data:
#       entity_id: switch.plug_switch

# - alias: Nightlight bedroom auto on
#   trigger:
#     platform: state
#     entity_id: binary_sensor.motion_living_room
#     to: 'on'
#   condition:
#     - condition: sun
#       after: sunset
#   action:
#     service: switch.turn_on
#     data:
#       entity_id: switch.plug_switch

##### Notification #####

- alias: Notify AQI
  trigger:
    - platform: numeric_state
      entity_id: sensor.us_air_quality_index
      above: 150
    - platform: time
      at: '7:30:00'
  condition:
    - condition: numeric_state
      entity_id: sensor.us_air_quality_index
      above: 150
    - condition: time
      after: '07:30'
      before: '22:00'
  action:
    service: notify.html5
    data_template:
      message: >-
        AQI {{ states(trigger.entity_id) }}

- alias: Notify home
  trigger:
    platform: state
    entity_id:
      - device_tracker.owntracks_2
    from: not_home
    to: home
  condition:
    condition: time
    after: '8:00'
    before: '21:00'
  action:
    service: notify.html5
    data_template:
      message: >-
        {{ state_attr(trigger.entity_id, 'friendly_name') }} arrived home

- alias: Notify update
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    service: notify.html5
    data_template:
      message: >-
        Home assistant version {{ states(trigger.entity_id) }} available

##### Water heater #####

- alias: Water heater
  trigger:
    - platform: time
      at: '16:30:00'
    - platform: time
      at: '16:40:00'
    - platform: time
      at: '17:30:00'
    - platform: time
      at: '18:30:00'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.water_heater

- alias: Water heater season
  trigger:
    platform: time
    at: '20:40:00'
  condition:
    condition: template
    value_template: >-
      {{ not is_state('sensor.season', 'summer')  }}
  action:
    service: switch.turn_on
    data:
      entity_id: switch.water_heater

##### Voice #####

- alias: Start hotword detection when hass start
  trigger:
    platform: homeassistant
    event: start
  condition:
    condition: state
    entity_id: device_tracker.owntracks_1
    state: home
  action:
    service: hotword_snowboy.listen

- alias: Start hotword detection when home
  trigger:
    platform: state
    entity_id: device_tracker.owntracks_1
    from: not_home
    to: home
  condition:
    condition: state
    entity_id:  hotword_snowboy.decoder
    state: idle
  action:
    service: hotword_snowboy.listen

- alias: Stop hotword detection when away
  trigger:
    platform: state
    entity_id: device_tracker.owntracks_1
    from: home
    to: not_home
  action:
    service: hotword_snowboy.terminate

- alias: Hotword activate web speech
  trigger:
    platform: event
    event_type: hotword_detected
  action:
    - service: paplay.play
      data:
        filename: audio/wakeup.ogg
    - service: web_speech.listen

- alias: Shake cube activate web speech
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/cube
  condition:
    condition: template
    value_template: >-
      {{ trigger.payload_json.action == 'shake' }}
  action:
    - service: paplay.play
      data:
        filename: audio/wakeup.ogg
    - service: web_speech.listen

# - alias: Play sound when web speech listen
#   trigger:
#     platform: state
#     entity_id: web_speech.web_speech
#     to: listening
#   action:
#     service: paplay.play
#     data:
#       filename: audio/wakeup.ogg

- alias: Start hotword detection when web speech finish
  trigger:
    platform: event
    event_type: speech_to_text
  action:
    service: hotword_snowboy.listen

- alias: Say pardon
  trigger:
    platform: event
    event_type: speech_to_text
  condition:
    condition: template
    value_template: >-
      {{ trigger.event.data['text'] == '' }}
  action:
    service: script.say
    data:
      message: 没有听清

- alias: Process conversation
  trigger:
    platform: event
    event_type: speech_to_text
  condition:
    condition: template
    value_template: >-
      {{ trigger.event.data['text'] != '' }}
  action:
    service: conversation.process
    data_template:
      text: >-
        {{ trigger.event.data['text'] }}
